parameters:
  ArmTemplateRoot: '$(Pipeline.Workspace)/Dfc.Grafana.Resources.ArmTemplates'
  AksResourceGroup: ''
  AzureSubscriptionEndpoint: ''
  Environment: ''
  EnvironmentTag: ''
  ImageBaseName: ''
  RenderImageBaseName: ''
  ParentBusinessTag: ''
  ResourceGroup: ''
  ServiceOfferingTag: ''
  SolutionBaseName: ''
  GrafanaNamespace: ''
  GrafanaRendererNamespace: ''

jobs:
- deployment: DeployTo_${{ parameters.Environment }}
  pool:
    name: 'NCS - CI and CD'
  environment: ${{ parameters.Environment }}
  workspace:
    clean: all
  strategy:
    runOnce:
      deploy:
        steps:
        - template: AzureDevOpsTemplates/Deploy/StepTemplates/dfc-arm-deploy.yml@dfc-devops
          parameters:
            ArmTemplateRoot: ${{ parameters.ArmTemplateRoot }}
            AzureSubscription: ${{ parameters.AzureSubscriptionEndpoint }}
            EnvironmentTag: ${{ parameters.EnvironmentTag }}
            ParentBusinessTag: ${{ parameters.ParentBusinessTag }}
            ResourceGroup: ${{ parameters.ResourceGroup }}
            ServiceOfferingTag: ${{ parameters.ServiceOfferingTag }}
        - template: AzureDevOpsTemplates\Deploy\StepTemplates\dfc-kubernetes-create-namespace.yml@dfc-devops
          parameters:
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            AksResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            Namespace: ${{ parameters.GrafanaNamespace }}
        - task: esfadevops.Tokenization.custom-build-task.Tokenization@0
          displayName: 'Tokenization: Transform file grafana.yaml'
          inputs:
            SourcePath: $(Pipeline.Workspace)/${{ parameters.ImageBaseName }}
            TargetFileNames: grafana.yaml
        - task: Kubernetes@1
          displayName: kubectl deploy manifest
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            useClusterAdmin: true
            namespace: '${{ parameters.GrafanaNamespace }}'
            command: 'apply'
            arguments: '--filename=$(Pipeline.Workspace)/${{ parameters.ImageBaseName }}/grafana.yaml'
        - template: AzureDevOpsTemplates\Deploy\StepTemplates\dfc-kubernetes-create-namespace.yml@dfc-devops
          parameters:
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            AksResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            Namespace: ${{ parameters.GrafanaRendererNamespace }}
        - task: esfadevops.Tokenization.custom-build-task.Tokenization@0
          displayName: 'Tokenization: Transform file grafana-renderer.yaml'
          inputs:
            SourcePath: $(Pipeline.Workspace)/${{ parameters.RenderImageBaseName }}
            TargetFileNames: grafana-renderer.yaml
        - task: Kubernetes@1
          displayName: kubectl deploy manifest
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            useClusterAdmin: true
            namespace: '${{ parameters.GrafanaRendererNamespace }}'
            command: 'apply'
            arguments: '--filename=$(Pipeline.Workspace)/${{ parameters.RenderImageBaseName }}/grafana-renderer.yaml'
        - task: Kubernetes@1
          displayName: create kured-ns namespace
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            useClusterAdmin: true
            namespace: default
            command: apply
            arguments: '--filename=$(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}.KuredManifests/create-kured-namespace.yaml '
            versionSpec: 1.19.4
        - task: Kubernetes@1
          displayName: kubectl deploy kured daemonset 1.6.1
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
            azureResourceGroup: ${{ parameters.AksResourceGroup }}
            kubernetesCluster: ${{ parameters.KubernetesCluster }}
            useClusterAdmin: true
            namespace: 'kured-ns'
            command: apply
            arguments: '--filename=$(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}.KuredManifests/kured-1.6.1-dockerhub.yaml '
            versionSpec: 1.19.4
