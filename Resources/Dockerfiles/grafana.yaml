apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
        kubernetes.io/hostname: __GrafanaNodeSelector__
      securityContext:
        fsGroup: 472
        supplementalGroups:
        - 0    
      containers:
        - name: grafana
          image: __ContainerRegistryAdminUser__.azurecr.io/ncs.grafana.image:__DFCGrafanaImageTag__
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-account-secret
                  key: password
            - name: GF_RENDERING_SERVER_URL
              value: http://__GrafanImageRenderingPublicIP__:8081/render
            - name: GF_RENDERING_CALLBACK_URL
              value: https://__GrafanaFQDN__:3000/
            - name: GF_LOG_FILTERS
              value: rendering:debug
            - name: GF_SERVER_DOMAIN
              value: __GrafanaFQDN__  
            - name: GF_SERVER_PROTOCOL
              value: https
            - name: GF_SERVER_CERT_FILE
              value: /var/lib/grafana/certificates/default/cert.pem
            - name: GF_SERVER_CERT_KEY
              value: /var/lib/grafana/certificates/default/privkey.pem
            - name: GF_RENDERER_PLUGIN_IGNORE_HTTPS_ERRORS
              value: "true"     
          ports:
            - containerPort: 3000
              name: https-grafana
              protocol: TCP           
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
            limits:
              cpu: 500m
              memory: 2G
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - name: certificates
              mountPath: /var/lib/grafana/certificates
            - name: grafanafiles
              mountPath: /var/lib/grafana/import   
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: certificates
          azureFile:
            secretName: sharedstr-account-secret
            shareName: certificates
            readOnly: true
        - name: grafanafiles
          azureFile:
            secretName: sharedstr-account-secret
            shareName: grafanafiles          

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - name: https
      port: 3000
      protocol: TCP
      targetPort: https-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: __GrafanaPublicIP__